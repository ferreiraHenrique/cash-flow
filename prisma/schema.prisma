// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// model User {
//   id      String   @id @default(auto()) @map("_id") @db.ObjectId
//   email   String   @unique
//   name    String?
// }

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String @map("refreshToken")
  access_token       String?  @db.String @map("accessToken")
  expires_at         Int?     @map("expiresAt")
  token_type         String?  @map("tokenType")
  scope              String?
  id_token           String?  @db.String @map("idToken")
  session_state      String?  @map("sessionState")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Year {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String    @unique
  months        Month[]
  startAt       DateTime
  userId        String    @db.ObjectId

  @@unique([name, userId])
  @@map("years")
}

model Month {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  userId        String        @db.ObjectId
  startAt       DateTime
  transactions  Transaction[]
  yearId        String        @db.ObjectId

  year          Year          @relation(fields: [yearId], references: [id], onDelete: Cascade)

  @@unique([yearId, name])
  @@map("months")
}

model Transaction {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  amount     Float
  discount   Float
  isCredit   Boolean
  monthId    String    @db.ObjectId

  month      Month     @relation(fields: [monthId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Receipt {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  baseAmount Float
  userId     String    @db.ObjectId

  @@map("receipts")
}

model Expense {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  baseAmount Float
  userId     String    @db.ObjectId

  @@map("expenses")
}
